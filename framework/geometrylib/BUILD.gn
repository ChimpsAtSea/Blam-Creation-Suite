import("//toolchain/bcs_projects.gni")

bcs_library("geometrylib")
{
  metadata = { project_folder = [ "//!Framework" ] }
  include_dirs = [ 
    "//thirdparty/assimp/assimp/include",
    "//thirdparty/assimp/buildfiles" ]
  sources = [
    "assimp_geometry_scene.h",
    "geometry_mesh.cpp",
    "geometry_mesh.h",
    "geometry_scene.cpp",
    "geometry_scene.h",
    "geometrylib-private-pch.h",
    "geometrylib-public-pch.h",
    "radiance_transfer.cpp",
    "radiance_transfer.h",
    "radiance_transfer_cpu.cpp",
    "radiance_transfer_cpu.h",
    "radiance_transfer_gpu.cpp",
    "radiance_transfer_gpu.h",
    "uv_atlas_packer.cpp",
    "uv_atlas_packer.h",
    "assimp_geometry_mesh.cpp",
    "assimp_geometry_mesh.h",
    "assimp_geometry_scene.cpp",
    "mopp_api.h",
    "mopp_api.cpp" ]
  libs = []
  deps = [
    "//framework/platform",
    "//framework/graphicslib",
    "//thirdparty/xxhash",
    "//thirdparty/directxmesh",
    "//thirdparty/directxtex",
    "//thirdparty/xatlas",
    "//thirdparty/assimp" ]
}
