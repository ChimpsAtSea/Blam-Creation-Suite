import("//toolchain/bcs_projects.gni")

bcs_library("graphicslib")
{
  metadata = { project_folder = [ "//!Framework" ] }
  include_dirs = []
  sources = [
    "dds.h",
    "graphicslib-private-pch.h",
    "graphicslib-public-pch.h",
    "archetype/archetype-public-pch.h",
    "archetype/graphics.h",
    "archetype/graphics_acceleration_structure.h",
    "archetype/graphics_buffer.h",
    "archetype/graphics_camera.h",
    "archetype/graphics_compute_pass.h",
    "archetype/graphics_data_format.h",
    "archetype/graphics_event.h",
    "archetype/graphics_geometry.h",
    "archetype/graphics_register_layout.h",
    "archetype/graphics_render_instance.h",
    "archetype/graphics_render_pass.h",
    "archetype/graphics_render_target.h",
    "archetype/graphics_shader_binary.h",
    "archetype/graphics_shader_pipeline.h",
    "archetype/graphics_swap_chain.h",
    "archetype/graphics_texture.h",
    "archetype/graphics_vertex_layout.h",
    "archetype/imgui_context.h",
    "archetype/viewport.h",
    "archetype/window.h",
    "d3d12/d3d12-private-pch.h",
    "d3d12/d3d12_gpu_data_structures.h",
    "d3d12/d3d12_graphics.h",
    "d3d12/d3d12_graphics_acceleration_structure.h",
    "d3d12/d3d12_graphics_buffer.h",
    "d3d12/d3d12_graphics_camera.h",
    "d3d12/d3d12_graphics_compute_pass.h",
    "d3d12/d3d12_graphics_geometry.h",
    "d3d12/d3d12_graphics_render_instance.h",
    "d3d12/d3d12_graphics_render_pass.h",
    "d3d12/d3d12_graphics_render_target.h",
    "d3d12/d3d12_graphics_root_signature.h",
    "d3d12/d3d12_graphics_shader_binary.h",
    "d3d12/d3d12_graphics_shader_pipeline.h",
    "d3d12/d3d12_graphics_swap_chain.h",
    "d3d12/d3d12_graphics_texture.h",
    "d3d12/d3d12_graphics_vertex_layout.h",
    "d3d12/d3d12_imgui_context.h",
    "d3d12/descriptor_heap_allocator_d3d12.h",
    "d3d12/descriptor_heap_d3d12.h",
    "imgui/begin_popup_modal_ex.h",
    "imgui/imgui-public-pch.h",
    "imgui/imgui_async_file_dialog.h",
    "imgui/imgui_math.h",
    "imgui/imgui_memory_editor.h",
    "imgui/imgui_text_editor.h",
    "scenes/imgui_viewport_render_context.h",
    "scenes/render_context.h",
    "scenes/window_render_context.h",
    "thirdparty/stb_image.h",
    "thirdparty/stb_image_resize.h",
    "thirdparty/thirdparty-public-pch.h",
    "thirdparty/tinyobjloader.h",
    "windows/window_windows.h",
    "windows/windows-private-pch.h",
    "archetype/graphics.cpp",
    "archetype/graphics_acceleration_structure.cpp",
    "archetype/graphics_buffer.cpp",
    "archetype/graphics_camera.cpp",
    "archetype/graphics_compute_pass.cpp",
    "archetype/graphics_data_format.cpp",
    "archetype/graphics_event.cpp",
    "archetype/graphics_geometry.cpp",
    "archetype/graphics_register_layout.cpp",
    "archetype/graphics_render_instance.cpp",
    "archetype/graphics_render_pass.cpp",
    "archetype/graphics_render_target.cpp",
    "archetype/graphics_shader_binary.cpp",
    "archetype/graphics_shader_pipeline.cpp",
    "archetype/graphics_swap_chain.cpp",
    "archetype/graphics_texture.cpp",
    "archetype/graphics_vertex_layout.cpp",
    "archetype/imgui_context.cpp",
    "archetype/viewport.cpp",
    "archetype/window.cpp",
    "d3d12/d3d12_graphics.cpp",
    "d3d12/d3d12_graphics_acceleration_structure.cpp",
    "d3d12/d3d12_graphics_buffer.cpp",
    "d3d12/d3d12_graphics_camera.cpp",
    "d3d12/d3d12_graphics_compute_pass.cpp",
    "d3d12/d3d12_graphics_geometry.cpp",
    "d3d12/d3d12_graphics_render_instance.cpp",
    "d3d12/d3d12_graphics_render_pass.cpp",
    "d3d12/d3d12_graphics_render_target.cpp",
    "d3d12/d3d12_graphics_root_signature.cpp",
    "d3d12/d3d12_graphics_shader_binary.cpp",
    "d3d12/d3d12_graphics_shader_pipeline.cpp",
    "d3d12/d3d12_graphics_swap_chain.cpp",
    "d3d12/d3d12_graphics_texture.cpp",
    "d3d12/d3d12_graphics_vertex_layout.cpp",
    "d3d12/d3d12_imgui_context.cpp",
    "d3d12/descriptor_heap_allocator_d3d12.cpp",
    "d3d12/descriptor_heap_d3d12.cpp",
    "imgui/begin_popup_modal_ex.cpp",
    "imgui/imgui_async_file_dialog.cpp",
    "imgui/imgui_memory_editor.cpp",
    "imgui/imgui_text_editor.cpp",
    "scenes/imgui_viewport_render_context.cpp",
    "scenes/render_context.cpp",
    "scenes/window_render_context.cpp",
    "thirdparty/stb_image.cpp",
    "thirdparty/stb_image_resize.cpp",
    "thirdparty/tinyobjloader.cpp",
    "windows/window_windows.cpp",
  ]
  libs = []

  if(is_target_windows)
  {
    include_dirs += [
      "//thirdparty/directx-headers/include/directx",
      "//thirdparty/d3d12raytracingfallback/Include",
      "//thirdparty/imgui/imgui",
      "//thirdparty/iconfontcppheaders",
      "//thirdparty/winpixeventruntime.1.0.220810001/Include/WinPixEventRuntime",
    ]

    sources += [
      
    ]
    
    libs += [
      "dxguid.lib",
      "dxgi.lib",
      "d3d12.lib",
      "Ole32.lib",
      "User32.lib",
      "Gdi32.lib",
      "Shcore.lib"
    ]
  }
  
  deps = [
    "//framework/platform:platform",
    "//framework/templatelibrary:templatelibrary",
    "//thirdparty/imgui:imgui",
    "//thirdparty/d3d12raytracingfallback:d3d12raytracingfallback",
  ]
}
