<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <ProjectGuid>{9F5CAF85-DAF8-4DF1-B51B-7460BAE926B5}</ProjectGuid>
    <RootNamespace>pugixml-build</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IntDir>$(SolutionDir)$(PlatformName)\$(Configuration)\build_temp\$(ProjectName)\</IntDir>
    <OutDir>$(SolutionDir)$(PlatformName)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <IntDir>$(SolutionDir)$(PlatformName)\$(Configuration)\build_temp\$(ProjectName)\</IntDir>
    <OutDir>$(SolutionDir)$(PlatformName)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IntDir>$(SolutionDir)$(PlatformName)\$(Configuration)\build_temp\$(ProjectName)\</IntDir>
    <OutDir>$(SolutionDir)$(PlatformName)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <IntDir>$(SolutionDir)$(PlatformName)\$(Configuration)\build_temp\$(ProjectName)\</IntDir>
    <OutDir>$(SolutionDir)$(PlatformName)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>if exist "$(ProjectDir)vcpkg\vcpkg.exe" (
    echo vcpkg is already configured
) else (
    "$(ProjectDir)vcpkg\bootstrap-vcpkg.bat"
)

"$(ProjectDir)vcpkg\vcpkg.exe" install ^
curl:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
rapidjson:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
ffmpeg[core,avcodec,swresample]:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
--overlay-triplets=custom-triplets --recurse

xcopy "$(SolutionDir)ThirdParty\vcpkg\vcpkg\installed\$(PlatformTarget)-$(Configuration.ToLower())-bcs\bin\*.dll" "$(OutDir)" /s /d /y
</Command>
    </PostBuildEvent>
    <Lib>
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>if exist "$(ProjectDir)vcpkg\vcpkg.exe" (
    echo vcpkg is already configured
) else (
    "$(ProjectDir)vcpkg\bootstrap-vcpkg.bat"
)

"$(ProjectDir)vcpkg\vcpkg.exe" install ^
curl:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
rapidjson:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
ffmpeg[core,avcodec,swresample]:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
--overlay-triplets=custom-triplets --recurse

xcopy "$(SolutionDir)ThirdParty\vcpkg\vcpkg\installed\$(PlatformTarget)-$(Configuration.ToLower())-bcs\bin\*.dll" "$(OutDir)" /s /d /y
</Command>
    </PostBuildEvent>
    <Lib>
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>if exist "$(ProjectDir)vcpkg\vcpkg.exe" (
    echo vcpkg is already configured
) else (
    "$(ProjectDir)vcpkg\bootstrap-vcpkg.bat"
)

"$(ProjectDir)vcpkg\vcpkg.exe" install ^
curl:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
rapidjson:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
ffmpeg[core,avcodec,swresample]:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
--overlay-triplets=custom-triplets --recurse

xcopy "$(SolutionDir)ThirdParty\vcpkg\vcpkg\installed\$(PlatformTarget)-$(Configuration.ToLower())-bcs\bin\*.dll" "$(OutDir)" /s /d /y
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>if exist "$(ProjectDir)vcpkg\vcpkg.exe" (
    echo vcpkg is already configured
) else (
    "$(ProjectDir)vcpkg\bootstrap-vcpkg.bat"
)

"$(ProjectDir)vcpkg\vcpkg.exe" install ^
curl:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
rapidjson:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
ffmpeg[core,avcodec,swresample]:$(PlatformTarget)-$(Configuration.ToLower())-bcs ^
--overlay-triplets=custom-triplets --recurse

xcopy "$(SolutionDir)ThirdParty\vcpkg\vcpkg\installed\$(PlatformTarget)-$(Configuration.ToLower())-bcs\bin\*.dll" "$(OutDir)" /s /d /y
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>